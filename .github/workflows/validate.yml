name: Validate

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read
  id-token: write

concurrency:
  group: ci-${{ github.ref }}-validate
  cancel-in-progress: true

env:
  NIX_CONFIG: "extra-experimental-features = nix-command flakes"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@v12
        with:
          extra-args: --prefer-upstream-nix
      - uses: DeterminateSystems/magic-nix-cache-action@v8
        with:
          use-flakehub: false

      - name: Lint with Statix
        run: |
          nix-shell -p statix --run 'statix check .'

      - name: Lint with Deadnix
        run: |
          nix-shell -p deadnix --run 'deadnix --fail --no-lambda-pattern-names .'

      - name: Flake checks
        run: nix flake check --print-build-logs --keep-going

  build-nixos:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        host: [rvn-vm]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@v12
        with:
          extra-args: --prefer-upstream-nix
      - uses: DeterminateSystems/magic-nix-cache-action@v8
        with:
          use-flakehub: false

      - name: Evaluate ${{ matrix.host }}
        run: |
          nix eval ".#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel" --json > /dev/null

      - name: Dry-run build ${{ matrix.host }}
        run: |
          nix build ".#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel" --dry-run --print-build-logs
