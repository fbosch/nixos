name: Security
on:
  push:
    branches: [main, master]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *" # daily

permissions:
  contents: read
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  NIX_CONFIG: "extra-experimental-features = nix-command flakes"

jobs:
  secrets-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Secrets scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  scan-nixos:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: [rvn-vm]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@v12
        with:
          extra-args: --prefer-upstream-nix
      - uses: DeterminateSystems/magic-nix-cache-action@v8
        with:
          use-flakehub: false

      - name: Build and capture store path
        id: build
        run: echo "out=$(nix build .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel --print-out-paths)" >> "$GITHUB_OUTPUT"

      - name: Run vulnix on store path
        continue-on-error: true
        env:
          LANG: C.UTF-8
        run: |
          nix run github:nix-community/vulnix -- --json "${{ steps.build.outputs.out }}" > vulnix.json || true
          vuln_count=$(jq 'length' vulnix.json)
          echo "Found $vuln_count vulnerabilities"
          if [ "$vuln_count" != "0" ]; then
            echo "::warning::Found $vuln_count vulnerabilities in ${{ matrix.host }}"
            echo "Top 20 vulnerabilities:"
            jq '.[0:20]' vulnix.json
          fi

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vulnix-${{ matrix.host }}
          path: vulnix.json
